/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package mobilestore.admin;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import mobilestore.common.ConnectionDB;
import mobilestore.common.MessageDialog;

/**
 *
 * @author longc
 */
public class ListUsers extends javax.swing.JInternalFrame {

    /**
     * Creates new form ListUsers
     */
        private DefaultTableModel tableModel;
    private void connectAndLoadData() {
    try (Connection connection = ConnectionDB.getConnection()) {
        String query = "SELECT users.id, users.username, users.password, users.fullname, users.email, COALESCE(SUM(orders.quantity), 0) "
                + "AS quantity_sold, users.role FROM users LEFT JOIN orders ON users.id = orders.user_id"
                + " WHERE users.role = 'user' GROUP BY users.id, users.username, users.password, users.fullname, users.email, users.role;";
        try (PreparedStatement preparedStatement = connection.prepareStatement(query);
            ResultSet resultSet = preparedStatement.executeQuery()) {
            java.sql.ResultSetMetaData metaData = resultSet.getMetaData();
            int columnCount = metaData.getColumnCount();
            tableModel.setRowCount(0);
            while (resultSet.next()) {
                Object[] rowData = new Object[columnCount];
                for (int i = 1; i <= columnCount-1; i++) {
                    rowData[i - 1] = resultSet.getObject(i);
                }
            int quantitySold = resultSet.getInt("quantity_sold");

            // Xác định hạng dựa trên số lượng sản phẩm đã mua
            String userRank;
            if (quantitySold >= 100) {
                userRank = "Kim Cương";
            } else if (quantitySold >= 50) {
                userRank = "Vàng";
            } else if (quantitySold >= 10) {
                userRank = "Bạc";
            } else if (quantitySold >= 1) {
                userRank = "Thân thiết";
            } else {
                userRank = "Chưa mua hàng";
            }

            rowData[5] = userRank;

            tableModel.addRow(rowData);
            }
        }
    } catch (SQLException e) {
        }
    }
    public ListUsers() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        searchTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordTF = new javax.swing.JTextField();
        usernameTf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        emailTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "Id", "Username", "Password", "Fullname", "Email", "Rank"
            }
        ));
        tableModel = (DefaultTableModel) userTable.getModel();
        connectAndLoadData();
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(userTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Search: ");

        searchTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTFKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Danh sách khách hàng");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Email");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Username");

        updateBtn.setText("Cập nhật");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchTF)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passwordTF)
                            .addComponent(usernameTf, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emailTF)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(354, 354, 354)
                        .addComponent(jLabel2)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseClicked
        DefaultTableModel tableModel = (DefaultTableModel) userTable.getModel();
        String username = tableModel.getValueAt(userTable.getSelectedRow(), 1).toString();
        String password = tableModel.getValueAt(userTable.getSelectedRow(), 2).toString();
        String email = tableModel.getValueAt(userTable.getSelectedRow(), 4).toString();
        //set text field
        usernameTf.setText(username);
        passwordTF.setText(password);
        emailTF.setText(email);      // TODO add your handling code here:
    }//GEN-LAST:event_userTableMouseClicked

    private void searchTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTFKeyReleased
        DefaultTableModel tableModel = (DefaultTableModel) userTable.getModel();
        TableRowSorter <DefaultTableModel> tableRowSorter = new TableRowSorter<>(tableModel);
        userTable.setRowSorter(tableRowSorter);
        tableRowSorter.setRowFilter(RowFilter.regexFilter(searchTF.getText()));  
    }//GEN-LAST:event_searchTFKeyReleased

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel) userTable.getModel();
        MessageDialog messageDialog = new MessageDialog();
        if (userTable.getSelectedRowCount() == 1) {
            String username = usernameTf.getText();
            String password = passwordTF.getText();
            String email = emailTF.getText();
            try (Connection connection = ConnectionDB.getConnection()) {
                String sql = "UPDATE users SET username=?, password=?, email=? WHERE id=?";
                try (PreparedStatement statement = connection.prepareStatement(sql)) {
                    statement.setString(1, username);
                    statement.setString(2, password);
                    statement.setString(3, email);
                    // Assuming "id" is the primary key in your table, adjust accordingly
                    int selectedRow = userTable.getSelectedRow();
                    int id = Integer.parseInt(tblModel.getValueAt(selectedRow, 0).toString());
                    statement.setInt(4, id);

                    // Execute the update
                    statement.executeUpdate();

                    // Update the table model
                    tblModel.setValueAt(username, selectedRow, 1);
                    tblModel.setValueAt(password, selectedRow, 2);
                    tblModel.setValueAt(email, selectedRow, 4);

                    // Refresh the table
                    userTable.repaint();
                    messageDialog.inforMessegeDiaLog("Update Successfully...!", "Alert !!");
                }catch (Error e) {
                messageDialog.inforMessegeDiaLog("Error Update...!", "Alert !!");
                }
            } catch (SQLException e) {
                messageDialog.inforMessegeDiaLog("Error Connect Database...!", "Alert !!");
            }
        }
    }//GEN-LAST:event_updateBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField emailTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField passwordTF;
    private javax.swing.JTextField searchTF;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTable userTable;
    private javax.swing.JTextField usernameTf;
    // End of variables declaration//GEN-END:variables
}
